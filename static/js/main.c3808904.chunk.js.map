{"version":3,"sources":["CSS.module/Form.module.css","CSS.module/Card.module.css","CSS.module/Navbar.module.css","CSS.module/Landing.module.css","img/safron.png","Components/Shopping/ProductCard.js","Components/Shopping/ProductList.js","Components/Shopping/Listing.js","Components/AboutUs.js","Components/Navbar.js","Components/Layouts/MainLayout.js","Components/Layouts/landing/Yalda.js","Components/Register.js","Components/Shopping/Product.js","Components/Shopping/Basket.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProductCard","props","className","style","card","a","product","id","src","product_thumb_url","alt","product_type","product_name","weight","price","farmer_thumb","farmer_name","quality_score","organic_fertilizer","toString","chemical_afatkosh","ProductList","changeSort","e","sorted","target","value","state","productList","sort","b","JSON","parse","stringify","defaultProduct","setState","filterByWeight","filtered","list","filter","this","onChange","styles","ul","map","createListItem","li","key","to","Component","AboutUs","Navbar","increment","dispatch","type","s","navbar","children","span","count","connect","Layout","landing","title","text","Yalda","img","Register","handleSignUp","bind","inputs","name","mobile","errors","handleValidation","handleChange","form","input","placeholder","button","onClick","preventDefault","localStorage","setItem","alert","Logout","navigate","clear","push","red","Product","match","params","withRouter","Basket","error","isLoaded","page","fetch","then","res","json","result","message","App","path","component","Listing","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","initialState","store","createStore","action","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c3808904.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__30HWj\",\"input\":\"Form_input__Pm3y-\",\"button\":\"Form_button__qpYqa\",\"red\":\"Form_red__2w_N6\",\"hidden\":\"Form_hidden__1D46_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__37BlR\",\"a\":\"Card_a__2Kpnu\",\"li\":\"Card_li__1fDor\",\"ul\":\"Card_ul__3R0Yh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1LdCm\",\"span\":\"Navbar_span__3UYCZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landing\":\"Landing_landing__2J-Ke\"};","module.exports = __webpack_public_path__ + \"static/media/safron.4f68900b.png\";","import React from 'react';\r\nimport '../../App.css'\r\nimport style from '../../CSS.module/Card.module.css';\r\n\r\nfunction ProductCard(props) {\r\n    return (\r\n        <div className={`${style.card} ${style.a}`}> \r\n            <p>id: {props.product.id}</p>\r\n            <img src={props.product.product_thumb_url} alt=\"Saffron\"></img>\r\n            <p>product_type: {props.product.product_type}</p>\r\n            <p>product_name: {props.product.product_name}</p>\r\n            <p>weight: {props.product.weight}</p>\r\n            <p>price: {props.product.price}</p>\r\n            <div>\r\n                <img src={props.product.farmer_thumb} alt=\"farmer in the land\"></img>\r\n                <p>farmer: {props.product.farmer_name}</p>\r\n                <p>quality: {props.product.quality_score}</p>\r\n                <p>organic: {props.product.organic_fertilizer.toString()}</p>\r\n                <p>chemical: {props.product.chemical_afatkosh.toString()}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductCard;","import React, { Component, PropTypes} from 'react';\r\nimport ProductCard from './ProductCard';\r\nimport styles from '../../CSS.module/Card.module.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    withRouter\r\n  } from \"react-router-dom\";\r\n\r\nclass ProductList extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            productList: this.props.list,\r\n            defaultProduct: JSON.parse(JSON.stringify(this.props.list)) ,\r\n            filtered: []\r\n        };\r\n    }\r\n\r\n    changeSort = (e) => {\r\n        let sorted\r\n        if (e.target.value === 'price') {\r\n            sorted = this.state.productList.sort((a, b) =>  a.price < b.price ? -1 : 1);\r\n        } else if (e.target.value === 'quality') {\r\n            sorted = this.state.productList.sort((a, b) =>  a.quality_score < b.quality_score ? 1 : -1);\r\n        } else {\r\n            sorted = JSON.parse(JSON.stringify(this.state.defaultProduct));\r\n        }\r\n\r\n        this.setState({\r\n            productList: sorted\r\n        });\r\n    }\r\n    filterByWeight = (e) => {\r\n        let filtered;\r\n        if (e.target.value === '1') {\r\n            filtered = this.props.list.filter(product => product.weight == 1);\r\n        } else if (e.target.value === '2') {\r\n            filtered = this.props.list.filter(product => product.weight == 2);\r\n        } else if (e.target.value === '3') {\r\n            filtered = this.props.list.filter(product => product.weight == 3);\r\n        } else {\r\n            filtered = JSON.parse(JSON.stringify(this.state.defaultProduct));\r\n        }\r\n        this.setState({\r\n            productList: filtered,\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <select value={this.changeSort.productList} onChange={this.changeSort}>\r\n                    <option value=\"default\">Default</option>\r\n                    <option value=\"price\">Price</option>\r\n                    <option value=\"quality\">Quality</option>\r\n                </select>\r\n\r\n                <select value={this.changeSort.productList} onChange={this.filterByWeight}>\r\n                    <option value=\"no-filter\">No Filter</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                </select>\r\n\r\n                <ul className={styles.ul}>\r\n                    {this.state.productList.map(this.createListItem)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    createListItem (product) {\r\n        return (\r\n            <li className={styles.li} key={product.id}>\r\n                <Link to={'/product/' + product.id}>\r\n                    <ProductCard product={product} />\r\n                </Link>  \r\n            </li>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductList;\r\n","import React from 'react';\nimport list from '../../data.json'\nimport ProductList from './ProductList';\n\n\nexport default () => \n<div>\n    <ProductList list={list} />\n</div>\n","import React from 'react';\r\n\r\nfunction AboutUs() {\r\n    return (\r\n        <div>\r\n            <h2>About</h2>\r\n            <p>hfbuhvcbdslnfcuwfhqeubhewfnlwenkjd</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AboutUs;","import React, {Component} from 'react';\r\nimport s from '../CSS.module/Navbar.module.css'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Navbar extends Component {\r\n    increment = () => {\r\n        this.props.dispatch({ type: 'INCREMENT' });\r\n    \r\n    }\r\n    render () {\r\n        return (\r\n            <div>\r\n                <ul className={s.navbar}>\r\n                    {this.props.children}\r\n                </ul>\r\n                <span className={s.span}>{this.props.count}</span>\r\n            </div>\r\n    \r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      count: state.count\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport s from '../../CSS.module/Landing.module.css'\r\n\r\nfunction Layout (props) {\r\n    return (\r\n        <div className={s.landing}>\r\n            <h1>{props.title}</h1>\r\n            <p>{props.text}</p>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport Layout from '../MainLayout'\r\nimport img from '../../../img/safron.png'\r\n\r\n\r\nclass Yalda extends Component {\r\n    render () {\r\n        return (\r\n            <Layout\r\n            title= \"یلدا\"\r\n            text=\"زعفران سرگل به بخش قرمز رنگ زعفران گفته می‌شه، رشته‌های زعفران وقتی که از گل زعفران بیرون میان، طولی حدود ۵ سانتی متر دارن و به دو بخش سفید رنگ و قرمز رنگ تقسیم می‌شن که رنگ زعفران مربوط به بخش قرمز رنگ، سرگل زعفرانه. کشاورز بعد از اینکه زعفران سرگل رو به کشمون تحویل می‌ده، به آزمایشگاه ارسال و کیفیتشون بررسی می‌شه و در نهایت به نام خود کشاورز، زعفران سرگل بسته بندی و روی وب سایت قرار می‌گیره. تمامی زعفران‌های سرگل موجود تو کشمون اصل هستن و زعفرانی که به دست شما می‌رسه، فقط محصول یک کشاورزه و قاطی زعفران کشاورزهای دیگه نیست.\r\n\r\n            زعفران سرگل نسبت به سایر انواع زعفران، گزینه بهتری برای رنگدهی به غذاست و تو تهیه غذاهایی مختلفی مثل زرشک پلو و ته‌چین و دسرهایی مثل شله‌زرد و حلوا و همچنین دمنوش زعفرانی استفاده می‌شه.\r\n            \r\n            خواص زعفران سرگل\r\n            یکی از مهم‌ترین خاصیت‌های زعفران، شادی آور بودنشه. زعفران با ترشح هورمون آندورفین باعث احساس شادی می‌شه و ممکنه تو جلوگیری از افسردگی موثر باشه. علاوه بر این استفاده از زعفران سرگل تو افزایش ایمنی بدن، افزایش گردش خون و سلامت قلب، کنترل دیابت و کاهش اضطراب مفیده. درصورت استفاده دارویی از زعفران سرگل با پزشک معالجتون مشورت کنین.\r\n            \r\n            خرید زعفران سرگل از کشاورز\r\n            کشمون به کشاورزهای که عضوش هستن کمک می‌کنه تا زعفران‌هاشون رو به نام خودشون، بدون واسطه و با سود بیشتر بفروشن. کشمون زعفران سرگل رو که از کشاورز می‌گیره، آزمایش و بررسی می‌کنه و بعد محصولات رو با اسم خود کشاورز و کیفیت مشخص، تو سایت برای فروش می‌ذاره.\"\r\n            >\r\n            <img src={img} alt=\"Yalding\" />\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Yalda;","import React, { Component } from 'react';\r\nimport s from '../CSS.module/Form.module.css'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSignUp = this.handleSignUp.bind(this);\r\n        this.state = {\r\n            inputs: {\r\n                name: '',\r\n                mobile: ''\r\n            },\r\n            errors: {},\r\n        };\r\n        this.handleSignUp = this.handleSignUp.bind(this)\r\n        this.handleValidation = this.handleValidation.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    render () {\r\n        return  (\r\n            <form className={s.form}>\r\n                <input className={s.input} type=\"text\" onChange={this.handleChange.bind(this, \"name\")} value={this.state.inputs[\"name\"]} placeholder=\"نام خود را وارد کنید\" />\r\n                <input className={s.input} onChange={this.handleChange.bind(this, \"mobile\")} value={this.state.inputs[\"mobile\"]} placeholder=\"شماره موبایل خود را وارد کنید\" />\r\n                <button className={s.button} type=\"submit\" onClick={this.handleSignUp}>ثبت شماره موبایل</button>\r\n                <Logout></Logout>\r\n            </form>\r\n        )\r\n    }\r\n    handleValidation () {\r\n        let formIsValid = true;\r\n        /*{\r\n        let inputs = {};\r\n        let errors = {};\r\n        if(!inputs[\"name\"]){\r\n            formIsValid = false;\r\n            errors[\"name\"] = \"Cannot be empty\";\r\n         }\r\n        if(typeof inputs[\"name\"] !== \"undefined\") {\r\n            if(!inputs[\"name\"].match(/^[a-zA-Z]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"name\"] = \"name is unvalid\";\r\n            }\r\n        } \r\n        this.setState({errors: errors});\r\n        }*/\r\n        return formIsValid;\r\n    }\r\n    handleChange(input, e) {\r\n        let inputs = this.state.inputs;\r\n\r\n        inputs[input] = e.target.value;\r\n        this.setState({inputs})\r\n    }\r\n    handleSignUp (e) {\r\n        e.preventDefault();\r\n        let loginStorage = localStorage.setItem(\"username\", this.state.inputs[\"name\"])\r\n        if(this.handleValidation()) {\r\n            alert(`${this.state.inputs[\"name\"]} is sigend up!`)\r\n        } else {\r\n            alert(\"Has Errors!\")\r\n        }\r\n    }\r\n}\r\nclass Logout extends Component {\r\n    state = {\r\n        navigate: false\r\n    };\r\n    Logout = () => {\r\n        localStorage.clear()\r\n        this.setState({navigate: true});\r\n    }\r\n    render() {\r\n        const { navigate } = this.state;\r\n\r\n        if (navigate) {\r\n            return <Redirect to=\"/listing\" push={true} />;\r\n        }\r\n        return <button className={`${s.button} ${s.red}`} onClick={this.Logout}>خروج از حساب کاربری</button>\r\n    }\r\n}\r\n\r\n\r\nexport default Register;","import React, {Component} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n    withRouter,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport ProductCard from './ProductCard';\r\nimport list from '../../data.json'\r\n\r\n\r\n\r\n class Product extends Component {\r\n/*{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch (\"C:/maryam/practice/150cards/my-app/src/data.json\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: result.items\r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        )\r\n    }\r\n}*/\r\n    increment = () => {\r\n        this.props.dispatch({ type: 'INCREMENT' });\r\n    \r\n    }\r\n    render() {\r\n    /*{\r\n        const { error, isLoaded, items} = this.state;\r\n        if (error) {\r\n            return <div>Error: {error.message}</div>;\r\n        } else if(!isLoaded) {\r\n            return <div>Loading...</div>\r\n        } else {}\r\n    }*/\r\n        const id = this.props.match.params.id;\r\n        return (\r\n            <div onClick={this.increment}>\r\n                <ProductCard product={list[id-1]}/>\r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      count: state.count\r\n    };\r\n}\r\nexport default withRouter(connect(mapStateToProps)(Product))\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Basket extends Component {\r\n        constructor(props) {\r\n            super(props) \r\n            this.state = {\r\n                error: null,\r\n                isLoaded: false,\r\n                page: []\r\n            }\r\n        }\r\n\r\n    componentDidMount () {\r\n        fetch(\"https://hn.algolia.com/api/v1/search?query=redux\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    page: result.page\r\n                })\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    increment = () => {\r\n        this.props.dispatch({ type: 'INCREMENT' });\r\n    \r\n    }\r\n    render () {\r\n        const {isLoaded, error, page} = this.state\r\n        if(error) {\r\n            return <p>Error: {error.message}</p>\r\n        } else if(!isLoaded) {\r\n            return <p>Loading ...</p>\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <p>{this.props.count}</p>\r\n                    <ul>\r\n                    <li>\r\n                        {page.title}\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      count: state.count\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Basket);","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport Listing from './Components/Shopping/Listing';\nimport AboutUs from './Components/AboutUs';\nimport Navbar from './Components/Navbar';\nimport Yalda from './Components/Layouts/landing/Yalda';\nimport Register from './Components/Register';\nimport Product from './Components/Shopping/Product'\nimport Basket from './Components/Shopping/Basket';\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar>\n            <li><Link to=\"/listing\">Listing</Link></li>\n            <li><Link to=\"/about-us\">About Us</Link></li>\n            <li><Link to=\"/yalda\">Landing</Link></li>\n            <li><Link to=\"/register\">Register/Logout</Link></li>\n            <li><Link to=\"/basket\">Basket</Link></li>\n        </Navbar>\n\n        <Switch>\n          <Route path=\"/listing\" component={Listing} />\n          <Route path=\"/about-us\" component={AboutUs} />\n          <Route path=\"/product/:id\" component={Product} />\n          <Route path=\"/yalda\" component={Yalda} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/basket\" component={Basket} />\n        </Switch>\n      </div>\n  </Router>\n\n  );\n}\nexport {\n  Navbar,\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state = initialState, action) {\n  if(action.type === \"INCREMENT\") {\n    return {\n      count: state.count + 1\n    };\n  }\n  return state;\n}\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}